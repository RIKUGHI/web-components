/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { DateRangeType, IdDatePickerState, NullableDate } from "./components/datePickerParts/single-date-picker/single-date-picker";
export { DateRangeType, IdDatePickerState, NullableDate } from "./components/datePickerParts/single-date-picker/single-date-picker";
export namespace Components {
    interface DatePicker {
        "defaultStyle": string;
        /**
          * YYYY-MM-DD
         */
        "defaultValue": string;
        "target": string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface SingleDatePicker {
        "currentMonth": number;
        "currentYear": number;
        "picker_id": IdDatePickerState;
        "selected": NullableDate | DateRangeType;
        "setCurrentMonth": (month: number, year: number, idComp: IdDatePickerState) => void;
        "setCurrentYear": (year: number, month: number, idComp: IdDatePickerState) => void;
        "setSelected": (v: Date) => void;
    }
}
declare global {
    interface HTMLDatePickerElement extends Components.DatePicker, HTMLStencilElement {
    }
    var HTMLDatePickerElement: {
        prototype: HTMLDatePickerElement;
        new (): HTMLDatePickerElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLSingleDatePickerElement extends Components.SingleDatePicker, HTMLStencilElement {
    }
    var HTMLSingleDatePickerElement: {
        prototype: HTMLSingleDatePickerElement;
        new (): HTMLSingleDatePickerElement;
    };
    interface HTMLElementTagNameMap {
        "date-picker": HTMLDatePickerElement;
        "my-component": HTMLMyComponentElement;
        "single-date-picker": HTMLSingleDatePickerElement;
    }
}
declare namespace LocalJSX {
    interface DatePicker {
        "defaultStyle"?: string;
        /**
          * YYYY-MM-DD
         */
        "defaultValue"?: string;
        "target"?: string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface SingleDatePicker {
        "currentMonth": number;
        "currentYear": number;
        "picker_id": IdDatePickerState;
        "selected": NullableDate | DateRangeType;
        "setCurrentMonth": (month: number, year: number, idComp: IdDatePickerState) => void;
        "setCurrentYear": (year: number, month: number, idComp: IdDatePickerState) => void;
        "setSelected": (v: Date) => void;
    }
    interface IntrinsicElements {
        "date-picker": DatePicker;
        "my-component": MyComponent;
        "single-date-picker": SingleDatePicker;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "date-picker": LocalJSX.DatePicker & JSXBase.HTMLAttributes<HTMLDatePickerElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "single-date-picker": LocalJSX.SingleDatePicker & JSXBase.HTMLAttributes<HTMLSingleDatePickerElement>;
        }
    }
}
